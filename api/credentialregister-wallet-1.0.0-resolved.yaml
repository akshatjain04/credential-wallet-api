---
openapi: 3.0.3
info:
  title: Wallet API
  description: The Wallet API of the Credential Register.
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/credentialregister/wallet/1.0.0
  description: SwaggerHub API Auto Mocking
- url: /v1
  description: Current server
tags:
- name: Login
  description: Login & Register
- name: Account
  description: My account
- name: Credentials
  description: Credentials in my Wallet
- name: Authorizations
  description: Other Accounts who are Authorized to access my Account
- name: API keys
  description: "Access your Account via the API, for example to automate registration issuing."
- name: Recipient Branch
  description: Organizations who receive Credentials
- name: Recipient Person
  description: People who receive Credentials
- name: Registrations
  description: The Registrations that are accredited to People or Branches
paths:
  /accounts:
    post:
      tags:
      - Login
      summary: Create new Account
      description: You will receive an email with OTP
      parameters:
      - name: commit-hash
        in: header
        description: Commit Hash of Client Sowftware
        required: false
        style: simple
        explode: false
        schema:
          pattern: "^[a-z0-9]{7}$"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/accounts_body'
      responses:
        "201":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
            commit-hash:
              $ref: '#/components/headers/commitHash'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - Login
      summary: Login to existing Account
      description: You will receive an email with OTP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/accounts_body_1'
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /login:
    post:
      tags:
      - Login
      summary: "Login using OTP: creates a session"
      description: "Returned is a token, which is combined the session-uuid and the account-uuid"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login_body'
      responses:
        "201":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /logout:
    post:
      tags:
      - Login
      summary: "Logout: delete the session"
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
  /me:
    get:
      tags:
      - Account
      summary: my account details
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Me'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
    patch:
      tags:
      - Account
      summary: Change my settings or account name
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/me_body'
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Me'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
  /credentials:
    get:
      tags:
      - Credentials
      summary: All credentials in my Wallet
      parameters:
      - name: size
        in: query
        description: Limit the number of results
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 1
          type: integer
          example: 20
      - name: offset
        in: query
        description: Offset results
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 0
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
            page-size:
              $ref: '#/components/headers/pageSize'
            page-offset:
              $ref: '#/components/headers/pageOffset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
  /credentials/{id}:
    get:
      tags:
      - Credentials
      summary: One credential from my Wallet
      parameters:
      - name: id
        in: path
        description: UUID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credential'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
    delete:
      tags:
      - Credentials
      summary: Delete one credential from my Wallet
      parameters:
      - name: id
        in: path
        description: UUID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
  /grants:
    get:
      tags:
      - Account
      summary: Retrieve accounts with granted access permissions
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
  /authorizations:
    get:
      tags:
      - Authorizations
      summary: List accounts who have access to my account
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
    post:
      tags:
      - Authorizations
      summary: Authorize another existing Account to access my Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authorizations_body'
      responses:
        "201":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
            location:
              $ref: '#/components/headers/location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authorization'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
  /authorizations/{id}:
    delete:
      tags:
      - Authorizations
      summary: Remove Authorized Account
      parameters:
      - name: id
        in: path
        description: UUID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
  /apikeys:
    get:
      tags:
      - API keys
      summary: List API Keys you have created (session.type = 4)
      description: API keys to access your account via the API. API Keys are a session record with session.type equal to 4.
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
    post:
      tags:
      - API keys
      summary: Create API Key (Create Session with type = 4)
      responses:
        "201":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
            location:
              $ref: '#/components/headers/location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201_1'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
  /apikeys/{id}:
    delete:
      tags:
      - API keys
      parameters:
      - name: id
        in: path
        description: UUID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
  /recipients/branches:
    get:
      tags:
      - Recipient Branch
      parameters:
      - name: coc-number
        in: query
        description: "Filter the results on the Chamber of Commerce number (Kamer van Koophandel nummer). This could return multiple results, as there could be multiple Branches."
        required: false
        style: form
        explode: true
        schema:
          pattern: "^\\d{8}$"
          type: string
      - name: coc-branch-number
        in: query
        description: Filter the results on the Chamber of Commerce Branch number (Kamer van Koophandel vestigingsnummer). This should only return a single result.
        required: false
        style: form
        explode: true
        schema:
          pattern: "^\\d{12}$"
          type: string
      - name: trade-name
        in: query
        description: Filter the results on the Tradename of the organization.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: size
        in: query
        description: Limit the number of results
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 1
          type: integer
          example: 20
      - name: offset
        in: query
        description: Offset results
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 0
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
            page-size:
              $ref: '#/components/headers/pageSize'
            page-offset:
              $ref: '#/components/headers/pageOffset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
    put:
      tags:
      - Recipient Branch
      description: "Add new Branch. The branch details are checked with the KvK API. If details are incorrect, an error is returned.<br>Required: cocNr  (single br) || (cocNr && city) || cocBranchNr"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/recipients_branches_body'
      responses:
        "200":
          description: "successful operation, existing branch returned"
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
            location:
              $ref: '#/components/headers/location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
        "201":
          description: "successful operation, branch created"
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
            location:
              $ref: '#/components/headers/location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
  /recipients/branches/{id}:
    get:
      tags:
      - Recipient Branch
      parameters:
      - name: id
        in: path
        description: UUID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
    delete:
      tags:
      - Recipient Branch
      parameters:
      - name: id
        in: path
        description: UUID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
    patch:
      tags:
      - Recipient Branch
      parameters:
      - name: id
        in: path
        description: UUID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/branches_id_body'
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
  /recipients/branches/{id}/registrations:
    get:
      tags:
      - Recipient Branch
      parameters:
      - name: id
        in: path
        description: UUID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: credential-url
        in: query
        description: Filter results on specific Credential (URL).
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: size
        in: query
        description: Limit the number of results
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 1
          type: integer
          example: 20
      - name: offset
        in: query
        description: Offset results
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 0
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
            page-size:
              $ref: '#/components/headers/pageSize'
            page-offset:
              $ref: '#/components/headers/pageOffset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
    post:
      tags:
      - Recipient Branch
      description: Create new Registration for the Recipient
      parameters:
      - name: id
        in: path
        description: UUID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/id_registrations_body'
      responses:
        "201":
          description: Successful
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
            location:
              $ref: '#/components/headers/location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
  /recipients/persons:
    get:
      tags:
      - Recipient Person
      parameters:
      - name: size
        in: query
        description: Limit the number of results
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 1
          type: integer
          example: 20
      - name: offset
        in: query
        description: Offset results
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 0
      - name: name
        in: query
        description: Filter results based on Person's name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: birth-date
        in: query
        description: Filter results based on birth date
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
            page-size:
              $ref: '#/components/headers/pageSize'
            page-offset:
              $ref: '#/components/headers/pageOffset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
    post:
      tags:
      - Recipient Person
      requestBody:
        description: Create new person-recipient of a Credential
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/recipients_persons_body'
      responses:
        "201":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
            location:
              $ref: '#/components/headers/location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
  /recipients/persons/{id}:
    get:
      tags:
      - Recipient Person
      parameters:
      - name: id
        in: path
        description: UUID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
    delete:
      tags:
      - Recipient Person
      parameters:
      - name: id
        in: path
        description: UUID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
    patch:
      tags:
      - Recipient Person
      description: "Update a Person. Note: when the VC is issued, these fields cannot be updated anymore:<br/>- initials<br/>- lastName<br/>- birthDate"
      parameters:
      - name: id
        in: path
        description: UUID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        description: --
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/persons_id_body'
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
  /recipients/persons/{id}/registrations:
    get:
      tags:
      - Recipient Person
      parameters:
      - name: id
        in: path
        description: UUID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: credential-url
        in: query
        description: Filter results on specific Credential (URL).
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: size
        in: query
        description: Limit the number of results
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 1
          type: integer
          example: 20
      - name: offset
        in: query
        description: Offset results
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 0
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
            page-size:
              $ref: '#/components/headers/pageSize'
            page-offset:
              $ref: '#/components/headers/pageOffset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
    post:
      tags:
      - Recipient Person
      description: Create new Registration
      parameters:
      - name: id
        in: path
        description: UUID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/id_registrations_body_1'
      responses:
        "201":
          description: Successful
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
            location:
              $ref: '#/components/headers/location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
  /registrations:
    get:
      tags:
      - Registrations
      parameters:
      - name: size
        in: query
        description: Limit the number of results
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 1
          type: integer
          example: 20
      - name: offset
        in: query
        description: Offset results
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 0
      - name: recipient-id
        in: query
        description: Filter results by Recipient ID (UUID)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: uuid
      - name: credential-url
        in: query
        description: Filter results on specific Credential (URL).
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
            page-size:
              $ref: '#/components/headers/pageSize'
            page-offset:
              $ref: '#/components/headers/pageOffset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
  /registrations/{id}:
    get:
      tags:
      - Registrations
      parameters:
      - name: id
        in: path
        description: UUID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationWithRecipient'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
    delete:
      tags:
      - Registrations
      parameters:
      - name: id
        in: path
        description: UUID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
    patch:
      tags:
      - Registrations
      parameters:
      - name: id
        in: path
        description: UUID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registrations_id_body'
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationWithRecipient'
        "4XX":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Authentication Required
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - ApiKeyAuth: []
  /errors:
    get:
      tags:
      - Errors
      responses:
        "200":
          description: successful operation
          headers:
            api-version:
              $ref: '#/components/headers/apiVersion'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
  /kvk/zoeken:
    get:
      tags:
      - KvK Zoeken API
      parameters:
      - name: kvkNummer
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: vestigingsnummer
        in: query
        description: Filter results based on reference
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: handelsnaam
        in: query
        description: Filter results based on reference
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
                example: See kvk OAS specs
      security:
      - ApiKeyAuth: []
components:
  schemas:
    id:
      type: string
      format: uuid
      nullable: false
    did:
      type: string
      nullable: true
    token:
      pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
      type: string
      nullable: false
    createdAt:
      type: string
      description: Created timestamp
      format: date-time
      nullable: false
    updatedAt:
      type: string
      description: Last change date
      format: date-time
      nullable: false
    issuedAt:
      type: string
      description: VC issued date
      format: date-time
      nullable: true
    imageUrl:
      pattern: "^\\w+:(\\/?\\/?)[^\\s]+$"
      type: string
      description: URL to PNG image file
      nullable: true
      example: https://cdn.credentialregiater.com/2571c54e-2cde-4434-83f2-c329f74adc27.png
    imageBase64:
      type: string
      description: Data URL encoding an image
      format: base64
      nullable: true
      example: "data:image/jpeg;base64,<clipped>"
    total:
      minimum: 0
      type: integer
      example: 1
    recipientType:
      type: string
      nullable: false
      enum:
      - branch
      - person
      - employee
    recipientName:
      pattern: "^[\\p{L} .'-]{1,100}$"
      type: string
      nullable: false
    accountName:
      pattern: "^[\\p{L} .'-]{1,100}$"
      type: string
      nullable: true
    initials:
      pattern: "^[A-Z]{1,6}$"
      type: string
      nullable: false
    firstName:
      pattern: "^[\\p{L} .'-]{1,50}$"
      type: string
      nullable: true
    middleName:
      pattern: "^[\\p{L} .'-]{1,20}$"
      type: string
      nullable: true
    lastName:
      pattern: "^[\\p{L} .'-]{2,50}$"
      type: string
      nullable: false
    phone:
      type: string
      nullable: true
    accountEmail:
      pattern: "^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$"
      type: string
      format: email
      nullable: false
    recipientEmail:
      pattern: "^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$"
      type: string
      format: email
      nullable: true
    deregistrationDate:
      type: string
      format: date
      nullable: true
    birthDate:
      type: string
      format: date
      nullable: false
    birthPlace:
      pattern: "^[\\p{L} .,'-]{2,100}$"
      type: string
      nullable: true
    postalCode:
      pattern: "^[0-9]{4}[A-Z]{2}$|^[0-9]{4,5}$"
      type: string
      description: "Postal code: 1234AB, 1234, or 12345"
      nullable: true
    houseNumber:
      pattern: "^\\d{1,6}$"
      type: string
      nullable: true
    houseNumberPostfix:
      pattern: "^[a-zA-Z .,_'-]{0,20}$"
      type: string
      nullable: true
    countryCode:
      pattern: "^[A-Z]{2}$"
      type: string
      nullable: true
    cocNumber:
      pattern: "^\\d{8}$"
      type: string
      description: Chamber of Commerce number
      nullable: true
    cocBranchNumber:
      pattern: "^\\d{12}$"
      type: string
      description: Chamber of Commerce Branch number
      nullable: true
    tradeName:
      type: string
      description: "The tradename of the Organization. Optionally this is the preferred name, different than the Organizations \"first\" trade name."
      nullable: false
    tradeNames:
      type: array
      description: The tradenams of the Organization.
      items:
        type: string
    eoriNumber:
      pattern: "^NL\\d{9}$"
      type: string
      description: European Business ID based on RSIN for NL
      nullable: true
    city:
      pattern: "^[\\p{L} .,'-]{2,100}$"
      type: string
      nullable: true
    recipientReference:
      maxLength: 100
      type: string
      nullable: true
    registrationReference:
      maxLength: 100
      type: string
      nullable: true
    startDate:
      type: string
      description: Date the qualification starts
      format: date
      nullable: false
    endDate:
      type: string
      description: Date the qualification ends
      format: date
      nullable: true
    suspendedUntil:
      type: string
      description: Date to un-suspend the registration
      format: date
      nullable: true
    registrationStatus:
      type: string
      description: "active, suspended, revoked, expired, pending"
      nullable: false
      example: active
    credentialStatus:
      type: string
      nullable: false
      enum:
      - active
      - suspended
      - revoked
      - expired
      - pending
    revoked:
      type: boolean
      example: false
    credential:
      type: string
      nullable: false
    credentialUrl:
      pattern: "^\\w+:(\\/?\\/?)[^\\s]+$"
      type: string
      nullable: false
    credentialFormat:
      type: string
      nullable: false
      enum:
      - jwt_vc_json
      - jwt_vc_json-ld
      - ldp_vc
    Me:
      required:
      - createdAt
      - did
      - email
      - id
      - image
      - name
      - settings
      - updatedAt
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        did:
          $ref: '#/components/schemas/did'
        name:
          $ref: '#/components/schemas/accountName'
        image:
          $ref: '#/components/schemas/imageUrl'
        email:
          $ref: '#/components/schemas/accountEmail'
        settings:
          type: object
          additionalProperties: true
        createdAt:
          $ref: '#/components/schemas/createdAt'
        updatedAt:
          $ref: '#/components/schemas/updatedAt'
    Credential:
      required:
      - createdAt
      - credential
      - format
      - id
      - status
      - statusUpdatedAt
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        format:
          $ref: '#/components/schemas/credentialFormat'
        credential:
          $ref: '#/components/schemas/credential'
        status:
          $ref: '#/components/schemas/credentialStatus'
        statusUpdatedAt:
          $ref: '#/components/schemas/updatedAt'
        createdAt:
          $ref: '#/components/schemas/createdAt'
    Authorization:
      required:
      - createdAt
      - email
      - id
      - name
      - updatedAt
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        name:
          $ref: '#/components/schemas/accountName'
        email:
          $ref: '#/components/schemas/accountEmail'
        createdAt:
          $ref: '#/components/schemas/createdAt'
        updatedAt:
          $ref: '#/components/schemas/updatedAt'
    Grant:
      required:
      - account
      - createdAt
      - id
      - token
      - updatedAt
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        token:
          $ref: '#/components/schemas/token'
        createdAt:
          $ref: '#/components/schemas/createdAt'
        updatedAt:
          $ref: '#/components/schemas/updatedAt'
        account:
          $ref: '#/components/schemas/Grant_account'
    Apikeys:
      required:
      - createdAt
      - id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        createdAt:
          $ref: '#/components/schemas/createdAt'
    Error:
      anyOf:
      - required:
        - description
        - error
        type: object
        properties:
          error:
            type: string
            example: error/code
          description:
            type: string
            example: Descriptive Error Message
      - required:
        - description
        - error
        - schema_field
        - value
        type: object
        properties:
          error:
            pattern: ^validation/.*$
            type: string
            example: validation/email-pattern
          description:
            type: string
            example: Descriptive Error Message
          value: {}
          field:
            type: string
          schema_field:
            type: string
    Branch:
      required:
      - cocBranchNumber
      - cocNumber
      - createdAt
      - deregistrationDate
      - eoriNumber
      - id
      - tradeName
      - tradeNames
      - updatedAt
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        email:
          $ref: '#/components/schemas/recipientEmail'
        phone:
          $ref: '#/components/schemas/phone'
        cocNumber:
          $ref: '#/components/schemas/cocNumber'
        cocBranchNumber:
          $ref: '#/components/schemas/cocBranchNumber'
        tradeName:
          $ref: '#/components/schemas/tradeName'
        tradeNames:
          $ref: '#/components/schemas/tradeNames'
        eoriNumber:
          $ref: '#/components/schemas/eoriNumber'
        deregistrationDate:
          $ref: '#/components/schemas/deregistrationDate'
        createdAt:
          $ref: '#/components/schemas/createdAt'
        updatedAt:
          $ref: '#/components/schemas/updatedAt'
    Registration:
      required:
      - createdAt
      - credentialUrl
      - endDate
      - id
      - issuedAt
      - reference
      - startDate
      - status
      - suspendedUntil
      - updatedAt
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        reference:
          $ref: '#/components/schemas/registrationReference'
        startDate:
          $ref: '#/components/schemas/startDate'
        endDate:
          $ref: '#/components/schemas/endDate'
        status:
          $ref: '#/components/schemas/registrationStatus'
        credentialUrl:
          $ref: '#/components/schemas/credentialUrl'
        suspendedUntil:
          $ref: '#/components/schemas/suspendedUntil'
        issuedAt:
          $ref: '#/components/schemas/issuedAt'
        createdAt:
          $ref: '#/components/schemas/createdAt'
        updatedAt:
          $ref: '#/components/schemas/updatedAt'
    RegistrationWithRecipient:
      required:
      - createdAt
      - credentialUrl
      - endDate
      - id
      - issuedAt
      - recipient
      - reference
      - startDate
      - status
      - suspendedUntil
      - updatedAt
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        reference:
          $ref: '#/components/schemas/registrationReference'
        startDate:
          $ref: '#/components/schemas/startDate'
        endDate:
          $ref: '#/components/schemas/endDate'
        status:
          $ref: '#/components/schemas/registrationStatus'
        credentialUrl:
          $ref: '#/components/schemas/credentialUrl'
        suspendedUntil:
          $ref: '#/components/schemas/suspendedUntil'
        issuedAt:
          $ref: '#/components/schemas/issuedAt'
        createdAt:
          $ref: '#/components/schemas/createdAt'
        updatedAt:
          $ref: '#/components/schemas/updatedAt'
        recipient:
          $ref: '#/components/schemas/RegistrationWithRecipient_recipient'
    Person:
      required:
      - birthDate
      - birthPlace
      - countryCode
      - createdAt
      - email
      - firstName
      - houseNumber
      - houseNumberPostfix
      - id
      - initials
      - lastName
      - middleName
      - phone
      - postalCode
      - reference
      - updatedAt
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        initials:
          $ref: '#/components/schemas/initials'
        firstName:
          $ref: '#/components/schemas/firstName'
        middleName:
          $ref: '#/components/schemas/middleName'
        lastName:
          $ref: '#/components/schemas/lastName'
        birthDate:
          $ref: '#/components/schemas/birthDate'
        birthPlace:
          $ref: '#/components/schemas/birthPlace'
        phone:
          $ref: '#/components/schemas/phone'
        email:
          $ref: '#/components/schemas/recipientEmail'
        postalCode:
          $ref: '#/components/schemas/postalCode'
        houseNumber:
          $ref: '#/components/schemas/houseNumber'
        houseNumberPostfix:
          $ref: '#/components/schemas/houseNumberPostfix'
        countryCode:
          $ref: '#/components/schemas/countryCode'
        reference:
          $ref: '#/components/schemas/recipientReference'
        createdAt:
          $ref: '#/components/schemas/createdAt'
        updatedAt:
          $ref: '#/components/schemas/updatedAt'
    accounts_body:
      required:
      - email
      type: object
      properties:
        email:
          $ref: '#/components/schemas/accountEmail'
    accounts_body_1:
      required:
      - email
      type: object
      properties:
        email:
          $ref: '#/components/schemas/accountEmail'
    login_body:
      required:
      - client
      - email
      - otp
      type: object
      properties:
        email:
          $ref: '#/components/schemas/accountEmail'
        otp:
          type: string
          nullable: false
          example: "123456"
        client:
          type: string
          nullable: false
          enum:
          - mobile
          - web
          - desktop
          - api
    inline_response_201:
      required:
      - token
      type: object
      properties:
        token:
          $ref: '#/components/schemas/token'
    me_body:
      type: object
      properties:
        name:
          type: string
        image:
          $ref: '#/components/schemas/imageBase64'
        settings:
          type: object
          additionalProperties: true
    inline_response_200:
      required:
      - credentials
      - total
      type: object
      properties:
        total:
          $ref: '#/components/schemas/total'
        credentials:
          type: array
          items:
            $ref: '#/components/schemas/Credential'
    inline_response_200_1:
      required:
      - grants
      - total
      type: object
      properties:
        total:
          $ref: '#/components/schemas/total'
        grants:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
    inline_response_200_2:
      required:
      - authorizations
      - total
      type: object
      properties:
        total:
          $ref: '#/components/schemas/total'
        authorizations:
          type: array
          items:
            $ref: '#/components/schemas/Authorization'
    authorizations_body:
      required:
      - email
      type: object
      properties:
        email:
          $ref: '#/components/schemas/accountEmail'
    inline_response_200_3:
      required:
      - apikeys
      - total
      type: object
      properties:
        total:
          $ref: '#/components/schemas/total'
        apikeys:
          type: array
          items:
            $ref: '#/components/schemas/Apikeys'
    inline_response_201_1:
      required:
      - createdAt
      - id
      - token
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        token:
          $ref: '#/components/schemas/token'
        createdAt:
          $ref: '#/components/schemas/createdAt'
    inline_response_200_4:
      required:
      - branches
      - total
      type: object
      properties:
        total:
          $ref: '#/components/schemas/total'
        branches:
          type: array
          items:
            $ref: '#/components/schemas/Branch'
    recipients_branches_body:
      type: object
      properties:
        cocNumber:
          $ref: '#/components/schemas/cocNumber'
        cocBranchNumber:
          $ref: '#/components/schemas/cocBranchNumber'
        city:
          $ref: '#/components/schemas/city'
        tradeName:
          $ref: '#/components/schemas/tradeName'
        phone:
          $ref: '#/components/schemas/phone'
        email:
          $ref: '#/components/schemas/recipientEmail'
    branches_id_body:
      type: object
      properties:
        tradeName:
          $ref: '#/components/schemas/tradeName'
        phone:
          $ref: '#/components/schemas/phone'
        email:
          $ref: '#/components/schemas/recipientEmail'
    inline_response_200_5:
      required:
      - registrations
      - total
      type: object
      properties:
        total:
          $ref: '#/components/schemas/total'
        registrations:
          type: array
          items:
            $ref: '#/components/schemas/Registration'
    id_registrations_body:
      required:
      - credentialUrl
      - startDate
      type: object
      properties:
        reference:
          $ref: '#/components/schemas/registrationReference'
        startDate:
          $ref: '#/components/schemas/startDate'
        endDate:
          $ref: '#/components/schemas/endDate'
        credentialUrl:
          $ref: '#/components/schemas/credentialUrl'
    inline_response_200_6:
      required:
      - persons
      - total
      type: object
      properties:
        total:
          $ref: '#/components/schemas/total'
        persons:
          type: array
          items:
            $ref: '#/components/schemas/Person'
    recipients_persons_body:
      required:
      - birthDate
      - initials
      - lastName
      type: object
      properties:
        initials:
          $ref: '#/components/schemas/initials'
        firstName:
          $ref: '#/components/schemas/firstName'
        middleName:
          $ref: '#/components/schemas/middleName'
        lastName:
          $ref: '#/components/schemas/lastName'
        birthDate:
          $ref: '#/components/schemas/birthDate'
        birthPlace:
          $ref: '#/components/schemas/birthPlace'
        phone:
          $ref: '#/components/schemas/phone'
        email:
          $ref: '#/components/schemas/recipientEmail'
        postalCode:
          $ref: '#/components/schemas/postalCode'
        houseNumber:
          $ref: '#/components/schemas/houseNumber'
        houseNumberPostfix:
          $ref: '#/components/schemas/houseNumberPostfix'
        countryCode:
          $ref: '#/components/schemas/countryCode'
        reference:
          $ref: '#/components/schemas/recipientReference'
    persons_id_body:
      type: object
      properties:
        initials:
          $ref: '#/components/schemas/initials'
        firstName:
          $ref: '#/components/schemas/firstName'
        middleName:
          $ref: '#/components/schemas/middleName'
        lastName:
          $ref: '#/components/schemas/lastName'
        birthDate:
          $ref: '#/components/schemas/birthDate'
        birthPlace:
          $ref: '#/components/schemas/birthPlace'
        phone:
          $ref: '#/components/schemas/phone'
        email:
          $ref: '#/components/schemas/recipientEmail'
        postalCode:
          $ref: '#/components/schemas/postalCode'
        houseNumber:
          $ref: '#/components/schemas/houseNumber'
        houseNumberPostfix:
          $ref: '#/components/schemas/houseNumberPostfix'
        countryCode:
          $ref: '#/components/schemas/countryCode'
        reference:
          $ref: '#/components/schemas/recipientReference'
    id_registrations_body_1:
      required:
      - credentialUrl
      - startDate
      type: object
      properties:
        reference:
          $ref: '#/components/schemas/registrationReference'
        startDate:
          $ref: '#/components/schemas/startDate'
        endDate:
          $ref: '#/components/schemas/endDate'
        credentialUrl:
          $ref: '#/components/schemas/credentialUrl'
    inline_response_200_7:
      required:
      - registrations
      - total
      type: object
      properties:
        total:
          $ref: '#/components/schemas/total'
        registrations:
          type: array
          items:
            $ref: '#/components/schemas/RegistrationWithRecipient'
    registrations_id_body:
      type: object
      properties:
        reference:
          $ref: '#/components/schemas/registrationReference'
        revoked:
          $ref: '#/components/schemas/revoked'
        suspendedUntil:
          $ref: '#/components/schemas/suspendedUntil'
        endDate:
          $ref: '#/components/schemas/endDate'
    Grant_account:
      required:
      - email
      - id
      - image
      - name
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        name:
          $ref: '#/components/schemas/recipientName'
        image:
          $ref: '#/components/schemas/imageBase64'
        email:
          $ref: '#/components/schemas/accountEmail'
    RegistrationWithRecipient_recipient:
      required:
      - id
      - name
      - type
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        name:
          $ref: '#/components/schemas/recipientName'
        type:
          $ref: '#/components/schemas/recipientType'
  responses:
    "4XX":
      description: Bad Request
      headers:
        api-version:
          $ref: '#/components/headers/apiVersion'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    "401":
      description: Authentication Required
      headers:
        api-version:
          $ref: '#/components/headers/apiVersion'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    commitHash:
      name: commit-hash
      in: header
      description: Commit Hash of Client Sowftware
      required: false
      style: simple
      explode: false
      schema:
        pattern: "^[a-z0-9]{7}$"
        type: string
    recipientId:
      name: recipient-id
      in: query
      description: Filter results by Recipient ID (UUID)
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: uuid
    id:
      name: id
      in: path
      description: UUID
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    offset:
      name: offset
      in: query
      description: Offset results
      required: false
      style: form
      explode: true
      schema:
        minimum: 0
        type: integer
        example: 0
    size:
      name: size
      in: query
      description: Limit the number of results
      required: false
      style: form
      explode: true
      schema:
        maximum: 50
        minimum: 1
        type: integer
        example: 20
    cocNumber:
      name: coc-number
      in: query
      description: "Filter the results on the Chamber of Commerce number (Kamer van Koophandel nummer). This could return multiple results, as there could be multiple Branches."
      required: false
      style: form
      explode: true
      schema:
        pattern: "^\\d{8}$"
        type: string
    cocBranchNumber:
      name: coc-branch-number
      in: query
      description: Filter the results on the Chamber of Commerce Branch number (Kamer van Koophandel vestigingsnummer). This should only return a single result.
      required: false
      style: form
      explode: true
      schema:
        pattern: "^\\d{12}$"
        type: string
    tradeName:
      name: trade-name
      in: query
      description: Filter the results on the Tradename of the organization.
      required: false
      style: form
      explode: true
      schema:
        type: string
    credentialUrl:
      name: credential-url
      in: query
      description: Filter results on specific Credential (URL).
      required: false
      style: form
      explode: true
      schema:
        type: string
    name:
      name: name
      in: query
      description: Filter results based on Person's name
      required: false
      style: form
      explode: true
      schema:
        type: string
    birthDate:
      name: birth-date
      in: query
      description: Filter results based on birth date
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date
    kvkNummer:
      name: kvkNummer
      in: query
      required: false
      style: form
      explode: true
      schema:
        type: string
    vestigingsnummer:
      name: vestigingsnummer
      in: query
      description: Filter results based on reference
      required: false
      style: form
      explode: true
      schema:
        type: string
    handelsnaam:
      name: handelsnaam
      in: query
      description: Filter results based on reference
      required: false
      style: form
      explode: true
      schema:
        type: string
  headers:
    apiVersion:
      description: API version
      style: simple
      explode: false
      schema:
        type: string
        example: 1.0.0
    commitHash:
      description: Commit Hash
      style: simple
      explode: false
      schema:
        type: string
        example: 928d28d
    pageSize:
      description: Response record count
      style: simple
      explode: false
      schema:
        type: integer
    pageOffset:
      description: Response record offset
      style: simple
      explode: false
      schema:
        type: integer
    location:
      description: Location of the created resource
      style: simple
      explode: false
      schema:
        type: string
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: Token
      in: header

# ********RoostGPT********

# Test generated by RoostGPT for test karate-nobel-prize-api-spec-test using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /accounts_post for http method type POST 
# RoostTestHash=53e96f9805
# 
# 

# ********RoostGPT********
Feature: Account Management API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
    * url urlBase
    * def authHeader = { 'commit-hash': '#(commitHash)', 'Authorization': '#(authToken)' }
    * def authToken = karate.properties['AUTH_TOKEN']
    * def commitHash = karate.properties['COMMIT_HASH']

  Scenario Outline: Valid scenario to create new account with email
    Given path '/accounts'
    And request {"email":"#(email)"}
    And headers authHeader
    When method post
    Then status 201
    And match responseHeaders contains { 'api-version': '#string', 'commit-hash': '#string' }

    Examples:
      | email              |
      | 'test@example.com' |
      | 'info@example.net' |

  Scenario: Invalid scenario with incorrect email format
    Given path '/accounts'
    And request {"email":"incorrectFormat"}
    And headers authHeader
    When method post
    Then status 400
    And match responseHeaders contains { 'api-version': '#string' }
    And match response contains { 'error': '#string', 'description': '#string' }
    And match response.error == 'validation/email-pattern'
    And match response.description == 'Descriptive Error Message'

